platform: linux

image_resource:
  type: docker-image
  source:
    repository: google/cloud-sdk
    tag: alpine

params:
  AUTH_KEY: ((gcp.service-account-key))
  GCP_SECRETS_VERSION: ((gcp.secrets-version))
  NETLIFY_BUCKET_NAME: ((gcp.netlify-bucket-name))

inputs:
- name: census-worth-self-help
- name: content-repository

caches:
- path: census-worth-self-help/site/node_modules
- path: .npm
- path: .cypress-cache

run:
  path: sh
  args:
  - -exec
  - |
    census-worth-self-help/pipeline/tasks/task-scripts/validate-deploy-site-env.sh
    set +x
    echo $BACKEND_CONTENT_REPO
    echo $AUTH_KEY > encrypted_key.txt
    set -x
    base64 -d encrypted_key.txt > service-account.json
    gcloud auth activate-service-account --key-file service-account.json
    gcloud config set project $PROJECT

    apk add --no-progress --update nodejs nodejs-npm
    echo "npm version"
    npm -v

    export ROOT_FOLDER=$(pwd)
    export CYPRESS_CACHE_FOLDER=${ROOT_FOLDER}/.cypress-cache
    cd census-worth-self-help/site
    npm install --only=prod

    if [ "${PATCH_NETLIFY}" == "true" ]; then
      gsutil cp gs://$NETLIFY_BUCKET_NAME/worth-netlify-cms-app-2-9-1-x.tar.gz .
      npm install worth-netlify-cms-app-2-9-1-x.tar.gz --only=prod
    fi

    BUILD="_build/content/"
    mkdir -p "$BUILD" && cp -R ../../content-repository/content/ "$BUILD"
    ASSET_DIR="static/assets/"
    cp -R ../../content-repository/static/assets/ "$ASSET_DIR"
    npm run build

    APP_FILE=ci-app.yaml
    sed "s/service:.*/service: $SERVICE/" app.yaml > ${APP_FILE}
    sed -i "s/  repo:.*/  repo: ONSdigital\/$BACKEND_CONTENT_REPO/" public/admin/config.yml

    ../pipeline/tasks/task-scripts/prepare-protected-site.sh ${APP_FILE}

    gcloud app deploy -q ci-app.yaml
#
# Deploy site
#
# Parameters
#    SKIP_UNIT_TESTS - set to false to skip unit tests, note that content deployments that use code
#                      that has already been unit tested does not value too much from rerunning the
#                      unit tests, so for such pipelines you can set this to false to speed up the
#                      build.
#

platform: linux

image_resource:
  type: docker-image
  source:
    repository: google/cloud-sdk
    tag: alpine

params:
  AUTH_KEY: ((gcp.service-account-key))
  GCP_SECRETS_VERSION: ((gcp.secrets-version))
  NETLIFY_BUCKET_NAME: ((gcp.netlify-bucket-name))
  NETLIFY_PATCH_VERSION: "2-9-7-x"
  GATSBY_ASSETS_PATH: ((gatsby.assets-path))
  GATSBY_CHAT_BUTTON_CONTAINER_ID: ((gatsby.chat-button-container-id))
  GATSBY_CHAT_CHANNEL: ((gatsby.chat-channel))
  GATSBY_CHAT_DOMAIN: ((gatsby.chat-domain))
  GATSBY_CHAT_TENANT: ((gatsby.chat-tenant))
  GATSBY_CHAT_UUID: ((gatsby.chat-uuid))

inputs:
- name: census-worth-self-help
- name: content-repository

caches:
- path: .npm
- path: .cypress-cache
- path: .cache

run:
  path: sh
  args:
  - -exec
  - |
    census-worth-self-help/pipeline/tasks/task-scripts/validate-deploy-site-env.sh
    census-worth-self-help/pipeline/tasks/task-scripts/activate-service-account.sh
    gcloud config set project $PROJECT

    apk add --no-progress --update nodejs nodejs-npm
    echo "npm version"
    npm -v
    node --version

    export ROOT_FOLDER=$(pwd)
    export CYPRESS_CACHE_FOLDER=${ROOT_FOLDER}/.cypress-cache
    npm config set cache ${ROOT_FOLDER}/.npm --global

    cd census-worth-self-help/site

    npm ci
    cd node_modules
    ln -s ../../../.cache .
    cd ..

    if [ "${PATCH_NETLIFY}" == "true" ]; then
      gsutil cp gs://$NETLIFY_BUCKET_NAME/worth-netlify-cms-app-${NETLIFY_PATCH_VERSION}.tar.gz .
      npm install worth-netlify-cms-app-${NETLIFY_PATCH_VERSION}.tar.gz --only=prod
    fi

    ../pipeline/tasks/task-scripts/move-content.sh

    if [ "${INJECT_DEPLOYMENT_INFORMATION}" == "true" ] ; then
      ../pipeline/tasks/task-scripts/inject-deployment-information.sh
    fi

    export GATSBY_TELEMETRY_DISABLED=1
    if [ "${SKIP_UNIT_TESTS}" == "true" ] ; then
      npm run build-no-audit-no-test
    elif [ "${SKIP_AUDIT}" == "true" ] ; then
      npm run build-no-audit
    else
      npm run build
    fi

    APP_FILE=ci-app.yaml

    ../pipeline/tasks/task-scripts/configure-app.sh ${APP_FILE}
    ../pipeline/tasks/task-scripts/prepare-site.sh ${APP_FILE}
    ../pipeline/tasks/task-scripts/clean-up-old-appengine-versions.sh $SERVICE
    gcloud app deploy -q ci-app.yaml